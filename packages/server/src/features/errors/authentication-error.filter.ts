import {
  ArgumentsHost,
  Catch,
  ExceptionFilter,
  UnauthorizedException,
} from '@nestjs/common';

import { AuthenticationErrorCodes } from '@biaplanner/shared';
import CustomAuthenticationError from 'src/errors/CustomAuthenticationError';
import { Response } from 'express';

/**
 * Generated by AI
 */
@Catch(UnauthorizedException, CustomAuthenticationError)
export class AuthenticationExceptionFilter implements ExceptionFilter {
  catch(exception: UnauthorizedException, host: ArgumentsHost) {
    const ctx = host.switchToHttp();
    const response = ctx.getResponse<Response>();
    const status = exception.getStatus();

    const errorResponse = exception.getResponse() as object;

    if (!Object.keys(errorResponse).includes('errorCode')) {
      response.status(status).json({
        ...errorResponse,
        errorCode: AuthenticationErrorCodes.UNKNOWN_ERROR,
      });
    } else {
      response.status(status).json(errorResponse);
    }
  }
}
